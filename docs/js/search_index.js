var search_data = {"index":{"searchIndex":["rangops","operators","predicates","utils","&()","complement()","contains?()","difference()","intersection()","is_contained_by?()","overlaps?()","proper_subset?()","proper_superset?()","sort_by_end()","sort_by_end()","subset?()","superset?()","union()","|()","readme"],"longSearchIndex":["rangops","rangops::operators","rangops::predicates","rangops::utils","rangops::operators#&()","rangops::operators#complement()","rangops::predicates#contains?()","rangops::operators#difference()","rangops::operators#intersection()","rangops::predicates#is_contained_by?()","rangops::predicates#overlaps?()","rangops::predicates#proper_subset?()","rangops::predicates#proper_superset?()","rangops::sort_by_end()","rangops::utils::sort_by_end()","rangops::predicates#subset?()","rangops::predicates#superset?()","rangops::operators#union()","rangops::operators#|()",""],"info":[["Rangops","","Rangops.html","",""],["Rangops::Operators","","Rangops/Operators.html","","<p>Module defining basic set operations that can be performed on ranges.\n<p>union\n<p>intersection\n"],["Rangops::Predicates","","Rangops/Predicates.html","",""],["Rangops::Utils","","Rangops/Utils.html","",""],["&","Rangops::Operators","Rangops/Operators.html#method-i-26","(other)",""],["complement","Rangops::Operators","Rangops/Operators.html#method-i-complement","(other)","<p>Relative complement of 2 ranges.\n"],["contains?","Rangops::Predicates","Rangops/Predicates.html#method-i-contains-3F","(other)",""],["difference","Rangops::Operators","Rangops/Operators.html#method-i-difference","(other)","<p>Symmetric difference of 2 ranges.\n"],["intersection","Rangops::Operators","Rangops/Operators.html#method-i-intersection","(other)","<p>Set intersection of 2 ranges.  Returns nil if ranges don&#39;t overlap.\n"],["is_contained_by?","Rangops::Predicates","Rangops/Predicates.html#method-i-is_contained_by-3F","(other)",""],["overlaps?","Rangops::Predicates","Rangops/Predicates.html#method-i-overlaps-3F","(other)","<p>Taken from ActiveSupport - it&#39;s not in dependencies, and the method\nitself is too useful to be left …\n"],["proper_subset?","Rangops::Predicates","Rangops/Predicates.html#method-i-proper_subset-3F","(other)",""],["proper_superset?","Rangops::Predicates","Rangops/Predicates.html#method-i-proper_superset-3F","(other)",""],["sort_by_end","Rangops","Rangops.html#method-c-sort_by_end","(*ranges)","<p>Sort ranges by their end value, respecting possible exclusions.\n"],["sort_by_end","Rangops::Utils","Rangops/Utils.html#method-c-sort_by_end","(*ranges)","<p>Sort ranges by their end value, respecting possible exclusions.\n"],["subset?","Rangops::Predicates","Rangops/Predicates.html#method-i-subset-3F","(other)",""],["superset?","Rangops::Predicates","Rangops/Predicates.html#method-i-superset-3F","(other)",""],["union","Rangops::Operators","Rangops/Operators.html#method-i-union","(other)","<p>Set union of 2 ranges. Returns a range covering sum of all elements\nbelonging to both ranges. Returns …\n"],["|","Rangops::Operators","Rangops/Operators.html#method-i-7C","(other)",""],["README","","README_md.html","","<p>Rangops\n<p>Rangops is a simple Ruby extension library that aims to treat Ranges as\nsets.\n<p>It provides methods …\n"]]}}